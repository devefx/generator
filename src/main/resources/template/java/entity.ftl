// Generated by the devefx compiler.  DO NOT EDIT!
package ${java_package};
<#if (imports?size > 0)>

<#list imports as import>
import ${import};
</#list>
</#if>
<#if (table.foreignTables?? && table.foreignTables?size > 0)>

import java.util.List;
import java.util.ArrayList;
</#if>

/**
 * ${table.formatName}
 * ${table.comment}
 * @date ${datetime}
 */
public class ${table.formatName} {

	<#list table.columns as column>
	private ${column.javaType} ${column.formatName};${placeholder(column.javaType+column.formatName, 25)} // ${column.comment}
	</#list>
	<#if (table.foreignTables?? && table.foreignTables?size > 0)>
	
	<#list table.foreignTables as tab>
	private List<${tab.formatName}> ${firstToLower(tab.formatName)}s;${placeholder(tab.formatName + tab.formatName, 50)} // ${tab.comment}集合
	</#list>
	</#if>
    <#if (table.referenceTables?? && table.referenceTables?size > 0)>
	
	<#list table.referenceTables?keys as key>
	private ${table.referenceTables[key]} ${key};${placeholder(table.referenceTables[key] + key, 25)} // ${tab.comment}
	</#list>
	</#if>
	
    <#list table.columns as column>
    /**
	 * 设置${column.comment}
	 * @param ${column.formatName}
	 */
	public void set${firstToUpper(column.formatName)}(${column.javaType} ${column.formatName}) {
        this.${column.formatName} = ${column.formatName};
	}
	
    /**
	 * 获取${column.comment}
	 * @return
	 */
	public ${column.javaType} get${firstToUpper(column.formatName)}() {
		return ${column.formatName};
	}
	
	</#list>
	<#if (table.foreignTables?? && table.foreignTables?size > 0)>
	<#list table.foreignTables as tab>
	public void set${firstToUpper(tab.formatName)}s(List<${tab.formatName}> ${firstToLower(tab.formatName)}s) {
        this.${firstToLower(tab.formatName)}s = ${firstToLower(tab.formatName)}s;
	}
	public List<${tab.formatName}> get${firstToUpper(tab.formatName)}s() {
		return ${firstToLower(tab.formatName)}s;
	}
	public void add${tab.formatName}(${tab.formatName} ${firstToLower(tab.formatName)}) {
		if (${firstToLower(tab.formatName)}s == null) {
			${firstToLower(tab.formatName)}s = new ArrayList<${tab.formatName}>();
		}
		${firstToLower(tab.formatName)}s.add(${firstToLower(tab.formatName)});
	}
	
	</#list>
	</#if>
	<#if (table.referenceTables?? && table.referenceTables?size > 0)>
	<#list table.referenceTables?keys as key>
    /**
	 * 设置${tab.comment}
	 * @param ${tab.formatName}
	 */
	public void set${firstToUpper(key)}(${table.referenceTables[key].formatName} ${key}) {
        this.${key} = ${key};
	}
	
    /**
	 * 获取${tab.comment}
	 * @return
	 */
	public ${table.referenceTables[key].formatName} get${firstToUpper(key)}() {
		return ${key};
	}
	
	</#list>
	</#if>
}